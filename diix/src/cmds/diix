#!/bin/bash

function extract
{
    local dir
    dir=$1


    (
	cd $dir
	cpio -id
	find . | while read; do
	    if file $REPLY | grep ELF > /dev/null 2>&1; then
		echo $REPLY
	    fi
	done
    )
}

function convert
{
    local idir=$1
    local odir=$2
    local conv=$3
    local ext=$4
    local i
    local o
    local t

    while read; do
	i=$idir/$REPLY
	t=${REPLY//\//^}
        o=$odir/${t/./,}$4
	$conv "$i" > "$o"
    done
}

function print_usage
{
    echo "Usage: "
    echo "	$0 --help|-h"
    echo "	$0 [--es] [--conv=CONVERTER] [--ext=EXT] [--yum=YUM-OPT] DEBUGINFO-RPM-FILE|DEBUGINFO-RPM-NAME [OUTPUT-DIR]"
}

function main
{
    local conv=cat
    local ext
    local yum_opts

    while [ $# -gt 0 ] ; do
	case "$1" in
	    --help|-h)
		print_usage
		exit 0
		;;
	    (--es)
	        conv=es-src-libdwarves
		ext=es
		;;
	    (--conv=*)
	        conv=${1/--conv=}
		;;
	    (--ext=*)
	        ext=.${1/--ext=}
		;;
	    (--yum=*)
	        yum_opts=${1/--yum=}
		;;
	    (--*)
	        echo "No such option: $1" 1>&2
		print_usage
		exit 1
		;;
	    *)
		break
		;;
	esac
	shift
    done

    local input
    input=$1
    shift

    if [ -z "$input" ]; then
	echo "too few argument"
	print_usage 1>&2
	exit 1
    fi
    
    local output
    output=${1:-.}
    shift
    
    mkdir -p "$output"
    if ! [ -d "$output" ]; then
	echo "cannot mkdir for output: $output" 1>&2
	exit 1
    fi

    tmpdir=$(mktemp -d)
    trap "chmod -R u+w $tmpdir; /bin/rm -rf $tmpdir" 0    

    if [[ "$input" =~ '\.rpm$' ]]; then
	if ! [ -f "$input" ]; then
	    echo "no such file: $input" 1>&2;
	    exit 1
	fi
    elif [[ "$input" =~ '^http://' ]] || [[ "$input" =~ '^https://' ]] || [[ "$input" =~ '^ftp://' ]]; then
	if wget -O "${tmpdir}/$(basename $input)" "$input"; then
	    input=${tmpdir}/$(basename $input)
	else
	    echo "failed to download $input(via wget)" 1>&2
	    exit 1
	fi
    else
	# TODO
	if yumdownloader ${yum_opts} --destdir="${tmpdir}" $input; then
	    if [ -f ${tmpdir}/${input}* ]; then
		input=$(ls ${tmpdir}/${input}*)
	    else
		echo "cannot find $input retrieved by yumdownloader" 1>&2
		exit 1
	    fi
	else
	    echo "failed to download $input(via yumdownloader)" 1>&2
	    exit 1
	fi
    fi
 
    rpm2cpio $input | extract $tmpdir | convert $tmpdir $output "$conv" "$ext"
}

main "$@"
