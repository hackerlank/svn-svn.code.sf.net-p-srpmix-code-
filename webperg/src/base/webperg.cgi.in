#!/bin/sh
#| -*- scheme -*- |#
:; exec gosh -- $0 "$@"

;; Copyright (C) 2010 Masatake YAMATO

;; This library is free software: you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; This library is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this library.  If not, see <http://www.gnu.org/licenses/>.
;;
;; Author: Masatake YAMATO <yamato@redhat.com>
;;
(use www.cgi)
(use text.html-lite)
(use gauche.process)
(use file.util)


(define webperg-libexec-dir "@libexecdir@/webperg")
(define srcview "@SRCVIEW@")


(cgi-main
 (lambda (params)
   (let ((dist (or (cgi-get-parameter "dist" params :convert x->string) "rhel5su4"))
	 (syslog (cgi-get-parameter "syslog" params :convert x->string)))
     (list
      (cgi-header)
      (html-doctype)
      (if syslog
	  (list 
	   (let1 mperg (run-process `(,(string-append webperg-libexec-dir "/" "mperg")
				      ,(string-append "--resolver=" webperg-libexec-dir "/" "list-srpmnames-by-file.sh")
				      ,(string-append "--url-format=" srcview)
				      "--format=html"
				      ,dist)
				    :input :pipe
				    :output :pipe)
	     (let1 p (process-input mperg)
	       (display syslog p)
	       (close-output-port p)
	       )
	     (let* ((p (process-output mperg))
		    (str (port->string p)))
	       (close-input-port p)
	       (process-wait mperg)
	       str
	     )))
	  (html:html
	   (html:head (html:title "webperg"))
	   (html:div "Choose a distribution and paste your /var/log/messages")
	   (html:body (html:form
		       (html:p (html:select :name "dist" :size 1
					    (map
					     (pa$ html:option)
					     (reverse (directory-list "/srv/sources/dists" 
								      :children? #t 
								      :filter (lambda (x) (#/rhel[0-9].*/ x)))))))
		       (html:p (html:textarea :rows 10 :cols 128 :name "syslog"))
		       (html:p (html:input :type "submit" :name "submit" :value "perg them"))))))))))

