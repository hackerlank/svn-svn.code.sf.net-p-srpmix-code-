#!/bin/bash
#
########################################################################
#
# github prelcopy class
#
# Copyright (C) 2012 Masatake YAMATO
#
# program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

########################################################################

declare GITHUB_CATEGORY
declare GITHUB_OWNER

function print_help
{
    echo "Usage: "
    echo "$0 PRELCOPY-FILE"
    exit $1
}

function emit
{
    local p=$1
    local url=$2
    local conf=$3
    
    cat  <<EOF
(prelcopy :package "$p"
          :branch  "trunk"
          :command-line "git clone $url"
          :update #t
          :generated-by "${0##*/}+$conf")
EOF
}

function extract
{
    gosh -b \
        -u rfc.json        \
        -u util.list       \
        -u gauche.sequence \
        -E 'for-each (^e (unless (eq? (assoc-ref e "fork") (quote true)) 
                                (print (assoc-ref e "name") " " (assoc-ref e "git_url")))) 
                        (parse-json)' \
	-E 'exit 0'
}

function main
{
    local conf
    local url

    local name
    local git_url


    if [ $# != 1 ]; then
	print_help 1 1>&2
    fi

    if ! source "$1"; then
	return $?
    fi
    conf="$1"

    : ${GITHUB_CATEGORY:=users}
    if [[ -z "${GITHUB_OWNER}" ]]; then
	echo "No value for GITHUB_OWNER" 1>&2
	return 1
    fi
    url="https://api.github.com/${GITHUB_CATEGORY}/${GITHUB_OWNER}/repos"

    curl -s "${url}" -o - \
	| extract \
	| while read name git_url; do
	emit "${name}" "${git_url}" "${conf}"
    done
    
    return 0
}

main "$@"