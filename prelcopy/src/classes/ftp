#!/bin/bash
#
########################################################################
#
# ftp prelcopy class
#
# Copyright (C) 2012 Masatake YAMATO
#
# program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

########################################################################

declare -a FTP_URLS
declare -A FTP_BRANCH_MAP

function print_help
{
    echo "Usage: "
    echo "$0 PRELCOPY-FILE"
    exit $1
}

function emit
{
    local p=$1
    local b=$2
    local url=$3
    local conf=$4
    
    cat  <<EOF
(prelcopy :package "$p"
          :branch  "$b"
          :command-line "wgetx $url"
          :update #f
          :generated-by "${0##*/}+$conf")
EOF
}
function main
{
    local conf
    local url
    local entry
    local regx 
    local branch

    if [ $# != 1 ]; then
	print_help 1 1>&2
    fi

    if ! source "$1"; then
	return $?
    fi
    conf="$1"

    if [[ "${#FTP_URLS[@]}" -eq 0 ]]; then
	echo "No value for FTP_URLS" 1>&2
	return 1
    fi

    
    if [[ "${#FTP_BRANCH_MAP[@]}" -eq 0 ]]; then
	echo "No value for FTP_BRANCH_MAP" 1>&2
	return 1
    fi

    for url in "${FTP_URLS[@]}"; do
	if [[ "${url:(( ${#url} - 1 )):${#url}}" = / ]]; then
	    url="${url:0:(( ${#url} -1 ))}"
	fi
	for entry in $(lftp -e nlist ${url} 2>/dev/null < /dev/null); do
	    entry="${url}/${entry}"
	    for regx in "${!FTP_BRANCH_MAP[@]}"; do
		if [[ "$entry" =~ $regx ]]; then
		    # echo ${BASH_REMATCH[1]}--${BASH_REMATCH[2]}--${BASH_REMATCH[3]}--${FTP_BRANCH_MAP["$regx"]}
		    # echo "$entry" -- "$regx"
		
		    branch="${FTP_BRANCH_MAP[$regx]}"

#		    if [[ -n "${BASH_REMATCH[2]}" ]]; then
#			branch="${branch}-${BASH_REMATCH[2]}"
#			if [[ -n "${BASH_REMATCH[3]}" ]]; then
#			    branch="${branch}-${BASH_REMATCH[3]}"
#			fi
#		    fi

		    emit "${BASH_REMATCH[1]}" "${branch}" "${entry}" "${conf}"
		    break
		fi
	    done
	done
    done

    return 0
}

main "$@"
