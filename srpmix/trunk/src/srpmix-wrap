#!/bin/sh
#
########################################################################
#
# srpmix-wrap: Wrap a target src.rpm to build srpmixed package
#
# Copyright (C) 2008 Masato Taruishi
#
# Author: Masato Taruishi <taruishi@redhat.com>
#
# program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################

RPMBUILD=rpmbuild
LIBSRPMIX=libsrpmix.sh
OUTPUTDIR=
TMPDIR=
RELEASE=0
PRINT_WRAPPED_NAME_ONLY=
DUMP_SPEC=

function print_usage
{
    echo "Usage: "
    echo "  srpmix-dist [--help|-h]"
    echo "  srpmix-dist [--print-wrapped-name-only]"
    echo "              [--dump-spec] "
    echo "              [--output-dir=OUTPUTDIR] "
    echo "              [--release=RELEASE]"
    echo "              [SRPMS...]"
    echo "  If SRPMS is not given, standard input is"
    echo "  used for the list of source packages."
    echo 
}

function cleanup
{
    if test -d "$TMPDIR"; then
        rm -rf $TMPDIR || true
    fi
}

function abort
{
    echo "*** ABORT..." "$@" 1>&2
    exit 1
}

function parse_arguments
{
    while [ $# -gt 0 ]; do
	case "$1" in
	    --help|-h)
		print_usage
		exit 0
		;;
	    --output-dir=*)
	        OUTPUTDIR=$(echo $1 | sed 's/--output-dir=//')
		;;
            --release=*)
	        RELEASE=$(echo $1 | sed 's/--release=//')
		;;
	    --print-wrapped-name-only)
	        PRINT_WRAPPED_NAME_ONLY=1
		;;
	    --dump-spec)
	        DUMP_SPEC=1
		;;
	    *)
		break
		;;
	esac
	shift
    done

    if test "x$1" = "x"; then
        while read tmp; do
	  srpms="${srpms} ${tmp}"
	done
    else
	srpms=$@	
    fi
    
    if test "x$OUTPUTDIR" = "x"; then
	OUTPUTDIR=.
    fi
    if test ! -d "${OUTPUTDIR}"; then
	abort "No such directory: ${OUTPUTDIR}"
    fi
}

function verify_commands
{
    while [ $# -gt 0 ]; do
	if which $1 > /dev/null 2>&1; then
	    :
	else
	    echo "cannot find $1" 1>&2
	    abort
	fi
	shift 
    done
}

function try_source
{
    source $1
    if test $? != 0; then
        abort "cannot find $1"
	exit 1
    fi
}

# A src.rpm is.
# => src.rpm for Foo is wrapped to srpmixed src.rpm by this function.
# ==> srpmixed rpm is created from srpmixed src.rpm by rpmbuild.
# ===> By Installing srpmixed rpm source files of Foo are deployed as if src.rpm for Foo is deployed 
#      by srpmix command.
#
# wrap_srpm srpm-file
#
function wrap_srpm
{
    srpm=$1
    spec=
    wrapped_name=

    pvrd=$(rpm -qp --nosignature --queryformat "%{NAME} %{VERSION} %{RELEASE} %{Description}" $1)
    package=$(echo $pvrd | cut -d' ' -f1)
    version=$(echo $pvrd | cut -d' ' -f2)
    release=$(echo $pvrd | cut -d' ' -f3)
    description=$(echo $pvrd | cut -d' ' -f4)
    if test "x$package" = "x"; then
        echo "warning: failed to parse $1: ignored" 1>&2
        return
    fi

    wrapped_name="$package-$version-$release-srpmix"
    if test "x$PRINT_WRAPPED_NAME_ONLY" != "x"; then
	# echo "${wrapped_name}"
	return
    fi
    
    if test -f "${OUTPUTDIR}/$package-$version-$release-srpmix-$SRPMIX_VERSION-$SRPMIX_RELEASE.src.rpm"; then
        echo "${OUTPUTDIR}/$package-$version-$release-srpmix-$SRPMIX_VERSION-$SRPMIX_RELEASE.src.rpm already exists" 1>&2
	echo "${wrapped_name}"
        return
    fi
    
    group=$(rpm -qp --nosignature --queryformat "%{Group}" $1)
    license=$(rpm -qp --nosignature --queryformat "%{License}" $1)
    changelog=$(LANG=C rpm -qp --nosignature --changelog $1 | sed 's/%/%%/g')
    if test "x$changelog" = "x(none)"; then
        changelog=""
    fi
    buildarch=$(rpm -qp --nosignature --queryformat "%{BUILDARCHS}" $1)
    if test "x$buildarch" = "x(none)"; then
        buildarch="noarch"
    fi

    srcdir=/usr/share/srpmix/sources/$(echo $package | sed  's/\(^.\).*/\1/')
    srcdir=$srcdir/$package/$version-$release

    if test "x${DUMP_SPEC}" = "x"; then
	spec="$TMPDIR/SPECS/$package-$version-$release-srpmix.spec"
    else
	spec="/dev/stdout"
	if test ! -w "${spec}"; then
	    # ???
	    spec="/dev/tty"
	fi
    fi
    
    cat > "$spec" <<EOF
Summary: Source Information for package $package ($version-$release)
Name: $package-$version-$release-srpmix
Version: $SRPMIX_VERSION
Release: $SRPMIX_RELEASE%{?dist}
Source: `basename $srpm`
Autoreq: 0
BuildRequires: srpmix
BuildRequires: rsync
Buildarch: $buildarch

Buildroot: %{_tmppath}/%{name}-root
Group: $group
License: $license

%define __os_install_post true

%description
$description

%package archives
Group: $group
Summary: Source Archives for package $package ($version-$release)

%description archives
$description

%prep
rm -rf %{_builddir}/$package-$version-srpmix

%build
srpmix -f -v %{_builddir}/$package-$version-srpmix \
    %{_sourcedir}/`basename $srpm`
srpmix-plugin %{_builddir}/$package-$version-srpmix

%install
rm -rf \$RPM_BUILD_ROOT
mkdir -p \$RPM_BUILD_ROOT/$srcdir

rsync -a  \$(/bin/ls -d %{_builddir}/$package-$version-srpmix/* | grep -v LOG | grep -v SPECS\$) \$RPM_BUILD_ROOT/$srcdir
mv \$RPM_BUILD_ROOT/$srcdir/*.spec \$RPM_BUILD_ROOT/$srcdir/specs.spec

%clean
rm -rf \$RPM_BUILD_ROOT

%files
%defattr(-,root,root)
/usr/share/srpmix/sources/*/*/*/SRPMIX
/usr/share/srpmix/sources/*/*/*/pre-build
/usr/share/srpmix/sources/*/*/*/plugins
/usr/share/srpmix/sources/*/*/*/specs.spec

%files archives
%defattr(-,root,root)
/usr/share/srpmix/sources/*/*/*/archives

%changelog
$changelog

EOF

    if test "x${DUMP_SPEC}" = "x"; then
	echo "${wrapped_name}"
	return
    fi

    cp $srpm $TMPDIR/SOURCES/
    $RPMBUILD --quiet --define "_topdir $TMPDIR" -bs "$spec" > /dev/null
    mv $TMPDIR/SRPMS/$package-$version-$release-srpmix-$SRPMIX_VERSION-$SRPMIX_RELEASE*.src.rpm "${OUTPUTDIR}"
    rm $TMPDIR/SOURCES/`basename $srpm`
    echo "${wrapped_name}"
}

function main
{
    verify_commands "${RPMBUILD}"
    parse_arguments "$@"
    #trap cleanup 0

    if test "x${PRINT_WRAPPED_NAME_ONLY}" = "x" \
	-o "x${DUMP_SPEC}" = "x"; then
	TMPDIR=`mktemp -d`
	install -d $TMPDIR/{SPECS,BUILD,SOURCES,SRPMS}
    fi

    packages=""
    for srpm in $srpms
    do
        if test -f "$srpm"; then
	    p=""
            es_print srpmix-wrap-start --target-srpm=\"`basename $srpm`\" --timestamp="\"`LANG=C date`\""
	    p=$(wrap_srpm $srpm)
            es_print srpmix-wrap-end --wrapped-name=\"$p\" --timestamp="\"`LANG=C date`"\"
            packages="$packages $p"
        else
            abort "No such file: $srpm"
        fi
    done
}

try_source ${LIBSRPMIX}
es_time main "$@"
exit $?
