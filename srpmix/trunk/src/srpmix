#!/bin/sh

TARGET_NAME=
TARGET_SRPM=

LIBSRPMIX=libsrpmix.sh
MY_TMPDIR=
WRAP_OPTS=""
DEBUG=""

set -e


function print_usage
{
    echo "Usage: "
    echo "  srpmix [--release=RELEASE] [--debug]  --name=PACKAGE|--srpm=SRPM"
#    TODO: Multi targets
#    TODO: URL support
#    echo ""
#    echo "As SRPM a url like http://... is acceptable."
#
#    TODO: --git
#          --hg
#          --tgz
#          --dir
#  
}

function parse_arguments
{
    while [ $# -gt 0 ]; do
	case "$1" in
            --help|-h)
		print_usage
		exit 0
		;;
	    --name=*)
                TARGET_NAME="$(echo $1 | sed 's/--name=//')"
                ;;
	    --srpm=*)
	        TARGET_SRPM="$(echo $1 | sed 's/--srpm=//')"
		;;
	    --release=*)
	        WRAP_OPTS="$WRAP_OPTS --release=$(echo $1 | sed 's/--release=//')"
		ENVELOP_OPTS="$ENVELOP_OPTS --release=$(echo $1 | sed 's/--release=//')"
	        ;;
	    --debug)
	        DEBUG=yes
		set -x
		;;
	    *)
	       break
	       ;;
	 esac
	 shift
    done
    
    if test "x$1" != "x"; then
	print_usage 1>&2
	srpmix_abort "too many arguments"
    fi

    if test -n "${TARGET_NAME}" -a -n "${TARGET_SRPM}"; then
	print_usage 1>&2
	srpmix_abort "Specify either --name or --srpm"
    fi

    if test -n "${TARGET_SRPM}"; then
	if test ! -f "${TARGET_SRPM}"; then
	    case "${TARGET_SRPM}" in
		http://*|ftp://*)
		    wget -O ${MY_TMPDIR}/$(basename ${TARGET_SRPM}) ${TARGET_SRPM}
		    if test $? = 0; then
			TARGET_SRPM="${MY_TMPDIR}/$(basename ${TARGET_SRPM})"
		    else
			srpmix_abort "Failed in download ${TARGET_SRPM}" 
		    fi
		    ;;
		*)
		    srpmix_abort "No way to retrieve ${TARGET_SRPM}"
		    ;;
	    esac
	else
	    if srpmix_can_ln "${TARGET_SRPM}" ${MY_TMPDIR}; then
		ln ${TARGET_SRPM} ${MY_TMPDIR}/$(basename ${TARGET_SRPM})
	    else
		cp ${TARGET_SRPM} ${MY_TMPDIR}/$(basename ${TARGET_SRPM})
	    fi
	    TARGET_SRPM=${MY_TMPDIR}/$(basename ${TARGET_SRPM})
	fi
    fi
}

function try_source
{
    source $1
    if test $? != 0; then
        echo "*** ABORT..." "cannot find $1" 1>&2
	exit 1
    fi
}

function is_memeber
{
    target="$1"
    shift

    for x in "$@"; do
	if test x"$target" =  x"$x"; then
	    return 0
	fi
    done

    return 1
}

function main
{
    if test "`whoami`" != "root"; then
	srpmix_abort "You must be root to run this program"
    fi

    all=`srpmix-db --list | grep -e '-srpmix$' | sed -e 's/-srpmix$//'`


    MY_TMPDIR=`mktemp -d`
    trap "/bin/rm -rf $MY_TMPDIR" 0    

    
    parse_arguments "$@"
    if test -n "$DEBUG"; then
	trap 0
	echo Using $MY_TMPDIR as temporary directory
    fi

    cd $MY_TMPDIR
    mkdir -p RPMS SRPMS BUILD BUILDROOT
    
    
    if test -n "${TARGET_NAME}"; then
	yumdownloader --source "${TARGET_NAME}"
	TARGET_SRPM=$(/bin/ls *.src.rpm)
    fi

    for srpm in $TARGET_SRPM; do
	pvr=$(rpm -qp --queryformat %{NAME}-%{VERSION}-%{RELEASE} $srpm)

	if is_memeber "$pvr" $all; then
	    echo "*** Source code for $pvr is already installed ***" 1>&2
	    continue
	fi

	srpmix-wrap $WRAP_OPTS $srpm
	rpmbuild --define "_rpmdir $MY_TMPDIR/RPMS"     \
	         --define "_srcrpmdir $MY_TMPDIR/SRPMS" \
	         --define "_builddir $MY_TMPDIR/BUILD"  \
		 --define "_buildrootdir $MY_TMPDIR/BUILDROOT" \
	         --rebuild -ba $pvr-srpmix-*.swrf.src.rpm \
        || exit 2
    done

    if test ! -d RPMS/noarch; then
	exit 1
    fi

    for swrf in `find RPMS/noarch -name '*swrf.noarch.rpm'`; do
	p=$(rpm -qp --nosignature --queryformat "%{NAME}" $swrf | cut -d' ' -f1)
	enveloped_name=$(srpmix_build_enveloped_name "$p")
	srpmix-envelop $ENVELOP_OPTS $swrf
	rpmbuild --define "_rpmdir $MY_TMPDIR/RPMS"     \
	         --define "_srcrpmdir $MY_TMPDIR/SRPMS" \
	         --define "_builddir $MY_TMPDIR/BUILD"  \
		 --define "_buildrootdir $MY_TMPDIR/BUILDROOT" \
	         --rebuild -ba ${enveloped_name}-$SRPMIX_VERSION-$SRPMIX_RELEASE.src.rpm \
	    || exit 2
    done
    find RPMS/noarch -name '*noarch.rpm' | grep -v '\.swrf\.' | xargs yum localinstall -y --nogpgcheck
}

try_source ${LIBSRPMIX}
main "$@"
exit $?
