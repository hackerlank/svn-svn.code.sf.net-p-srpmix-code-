#!/bin/sh
#
########################################################################
#
# srpmix-vanilla: Expand compressed and/or archived files in SOURCES to VANILLA
#
# Copyright (C) 2007-2009 Masatake YAMATO
#
# Author: Masatake YAMATO <yamato@redhat.com>
#
# program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################

ROOTDIR=

SOURCESDIR=
LOGFILE=
LIBSRPMIX=libsrpmix.sh

SRPMIX_VANIILA_DEBUG=

TMPDIR=/tmp/$(basename $0).$$
mkdir -p $TMPDIR
trap "/bin/rm -rf $TMPDIR" 0

function print_usage
{
    echo "Usage: "
    echo "  $0 [--help|-h]"
    echo "  $0 [--debug] ROOTDIR"
    echo 
}

function parse_arguments
{
    status=


    while [ $# -gt 0 ]; do
	case "$1" in
	    --help|-h)
		print_usage
		exit 0
		;;
	    --debug)
		set -x
		PS4="${PS4}[vanilla]"
		SRPMIX_VANIILA_DEBUG=yes
		;;
	    *)
		break
		;;
	esac
	shift
    done

    if test $# -ne 1; then
	echo "wrong number of argument" 1>&2
	print_usage 1>&2
	srpmix_abort
    fi

    ROOTDIR=$(cd $1;pwd)
    shift

    cd ${TMPDIR}
    verify_directory ${ROOTDIR}

    SOURCESDIR=${ROOTDIR}/archives
    PLUGINDIR=${ROOTDIR}/plugins/vanilla
    LOGFILE=${PLUGINDIR}/vanilla-log.es

}

function run_vanilla
{
    d=$1
    o=$2
    l=$3
    local report_to=/dev/null

    if test x$SRPMIX_VANIILA_DEBUG != x; then
	report_to=/dev/stdout
    fi

    es_print vanilla-start --timestamp=\"`LANG=C date`\" --input=\"$d\" --output=\"$o\" | tee -a $l

    count=0
    for f in `find ${d} -type f`; do
	case "$f" in
	    *.tar.bz2|*.tbz|*.tbz2)
                count=`expr $count + 1`
		ln -s ../archives/$(basename $f) "$o/`basename $f`"
		(cd "$o"; tar jxvfm $f 2>&1 > ${report_to};
		    es_print vanilla-expand --command=\"tar\" --input=\"$f\" --status=\"$?\" | tee -a $l)
		;;
	    *.tar.gz|*.tgz|*.tar.Z)
                count=`expr $count + 1`
		ln -s ../archives/$(basename $f) "$o/`basename $f`"
		(cd "$o"; tar zxvfm $f 2>&1 > ${report_to};
		    es_print vanilla-expand --command=\"tar\" --input=\"$f\" --status=\"$?\" | tee -a $l)
		;;
	    # TODO: Is -X needed to update the file modification time?
	    *.zip)
	        count=`expr $count + 1`
		ln -s ../archives/$(basename $f) "$o/`basename $f`"
		(cd "$o"; unzip -o $f 2>&1 > ${report_to};
		    es_print vanilla-expand --command=\"unzip\" --input=\"$f\" --status=\"$?\" | tee -a $l)
		;;
  	    *.jar)
	        count=`expr $count + 1`
		ln -s ../archives/$(basename $f) "$o/`basename $f`"
		(cd "$o"; fastjar xf $f 2>&1 > ${report_to};
		    es_print vanilla-expand --command=\"jar\" --input=\"$f\" --status=\"$?\" | tee -a $l)
		;;
  	    *.gz|*.Z)
	        count=`expr $count + 1`
		ln -s ../archives/$(basename $f) "$o/`basename $f`"
		# --force is needed to decompress a file specified by a soft link.
		(cd "$o"; gunzip --force $f 2>&1 > ${report_to};
		    es_print vanilla-expand --command=\"gunzip\" --input=\"$f\" --status=\"$?\" | tee -a $l)
		;;
  	    *.bz2)
	        count=`expr $count + 1`
		# --force is needed to decompress a file specified by a soft link.
		ln -s ../archives/$(basename $f) "$o/`basename $f`"
		(cd "$o"; bunzip2 --force $f 2>&1 > ${report_to};
		    es_print vanilla-expand --command=\"bunzip2\" --input=\"$f\" --status=\"$?\" | tee -a $l)
		;;
	    *.tar.lzma)
		count=`expr $count + 1`
		ln -s ../archives/$(basename $f) "$o/`basename $f`"
		(cd "$o"; unlzma --force --stdout $f > $(basename $f .lzma) &&
		    tar xfm $(basename $f .lzma); 
		    rm $(basename $f .lzma);
		    es_print vanilla-expand --command=\"lzma+tar\" --input=\"$f\" --status=\"$?\" | tee -a $l)
		;;
	    *.lzma)
	        count=`expr $count + 1`
		# --force is needed to decompress a file specified by a soft link.
		ln -s ../archives/$(basename $f) "$o/`basename $f`"
		(cd "$o"; unlzma --force --stdout $f > $(basename $f .lzma)  &&
		    es_print vanilla-expand --command=\"lzma\" --input=\"$f\" --status=\"$?\" | tee -a $l)
		;;
	esac
    done
    es_print vanilla-end --count=${count} --timestamp=\"`LANG=C date`\" --output=\"$o\" | tee -a $l
    return 0
}

function verify_directory
{
    if test ! -d ${1}; then
	echo "*** ABORT...cannot find ${1}" '(' `pwd` ')'; 1>&2
	exit 1
    fi
}

function try_source
{
    source $1
    if test $? != 0; then
	echo "*** ABORT...cannot find $1" 1>&2
	exit 1
    fi
}

function main
{
    o= 

    srpmix_verify_commands tar unzip fastjar gunzip bunzip2
    parse_arguments "$@"

    tmpdir=${PLUGINDIR}/.vanilla
    if test -d "${SOURCESDIR}" &&
       ( ! test -d "${ROOTDIR}/vanilla" ||
	test "$(/bin/ls ${SOURCESDIR}/* | head -1)" -nt "${ROOTDIR}/vanilla"); then
        test -d $tmpdir && /bin/rm -rf $tmpdir
	install -d $tmpdir
	# o=$tmpdir/`echo ${d} | sed -e 's!'"${SOURCESDIR}/"'!!'`
	o=$tmpdir
	run_vanilla ${SOURCESDIR} $o $LOGFILE
	if ! test -d "${ROOTDIR}/vanilla"; then
            /bin/mv "$tmpdir" "${ROOTDIR}/vanilla"
        else
            rsync -a --delete $tmpdir/ "${ROOTDIR}/vanilla"
            /bin/rm -rf "$tmpdir"
        fi
    fi
}


try_source ${LIBSRPMIX}
es_time main "$@"
exit $?

