#!/bin/sh
#
########################################################################
#
# srpmix-dist: Create src.rpm to build srpmixed package
#
# Copyright (C) 2008 Masato Taruishi
#
# Author: Masato Taruishi <taruishi@redhat.com>
#
# program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################

RPMBUILD=rpmbuild
LIBSRPMIX=libsrpmix.sh
TMPDIR=
NAME=

function print_usage
{
    echo "Usage: "
    echo "  srpmix-dist [--help|-h]"
    echo "  srpmix-dist [--name=NAME] [SRPMS...]"
    echo "  If SRPMS is not given, standard input is"
    echo "  used for the list of source packages."
    echo 
}

function cleanup
{
    if test -d "$TMPDIR"; then
        rm -rf $TMPDIR || true
    fi
}

function abort
{
    echo "*** ABORT..." "$@" 1>&2
    exit 1
}

function parse_arguments
{
    status=

    while [ $# -gt 0 ]; do
	case "$1" in
	    --help|-h)
		print_usage
		exit 0
		;;
            --name=*)
                NAME=$(echo $1 | sed 's/--name=//')
                ;;
	    *)
		break
		;;
	esac
	shift
    done

    if test "x$1" = "x"; then
        print_usage
        abort
    fi

    srpms=$@
    if [ "x${srpms}" = "x" ]; then
	while read tmp; do
	  srpms="${srpms} ${tmp}"
	done
    fi
}

function verify_commands
{
    while [ $# -gt 0 ]; do
	if which $1 > /dev/null 2>&1; then
	    :
	else
	    echo "cannot find $1" 1>&2
	    abort
	fi
	shift 
    done
}

function try_source
{
    source $1
    if test $? != 0; then
        abort "cannot find $1"
	exit 1
    fi
}

# createmetasrpm <name> [<packages>...
function create_meta_srpm
{
    name=$1
    shift

    spec=$TMPDIR/SPECS/srpmix-dist-$name.spec
    distdir=/usr/share/srpmix/dists

    cat > $spec <<EOF
Summary: Sources for distribution $name
Name: srpmix-dist-$name
Version: $SRPMIX_VERSION
Release: $SRPMIX_RELEASE%{?dist}
Autoreq: 0
Buildarch: noarch
EOF

for p in $@
do
    echo "BuildRequires: $p" >> $spec
done
for p in $@
do
    echo "Requires: $p" >> $spec
done

cat >> $spec <<EOF

Buildroot: %{_tmppath}/%{name}-root
Group: System/Daemon
License: Unknown

%define __os_install_post true

%description
Sources for distribution $name

%prep
rm -rf %{_builddir}/srpmix-dist-$name-$SRPMIX_VERSION

%build

builddistdir=%{_builddir}/srpmix-dist-$name-$SRPMIX_VERSION/$distdir
mkdir -p \$builddistdir \$builddistdir/pre-build \$builddistdir/srpmix-LOG

for p in $@
do
  origp=\$(echo \$p | sed 's/-srpmix.*//')
  d=\$(rpm -ql \$p | grep pre-build | sort | head -1 | xargs -n1 dirname)
  ln -sf \$d/pre-build \$builddistdir/pre-build/\$origp
done

srpmix-plugin \$builddistdir

%install
builddistdir=%{_builddir}/srpmix-dist-$name-$SRPMIX_VERSION/$distdir

rm -rf \$RPM_BUILD_ROOT
mkdir -p \$RPM_BUILD_ROOT/$distdir

rsync -va \$builddistdir \$RPM_BUILD_ROOT/$distdir

%clean
rm -rf \$RPM_BUILD_ROOT

%files
%defattr(-,root,root)
/

%changelog

EOF

    $RPMBUILD --quiet --define "_topdir $TMPDIR" -bs $spec > /dev/null
    rm -rf %{_builddir}/srpmix-dist-$name-$SRPMIX_VERSION
    mv $TMPDIR/SRPMS/srpmix-dist-$name-$SRPMIX_VERSION-$SRPMIX_RELEASE*.src.rpm .
}

function create_srpm
{
    srpm=$1

    pvrd=$(rpm -qp --queryformat "%{NAME} %{VERSION} %{RELEASE} %{Description}" $1)
    package=$(echo $pvrd | cut -d' ' -f1)
    version=$(echo $pvrd | cut -d' ' -f2)
    release=$(echo $pvrd | cut -d' ' -f3)
    description=$(echo $pvrd | cut -d' ' -f4)
    if test "x$package" = "x"; then
        echo "warning: failed to parse $1: ignored" 1>&2
        return
    fi
    if test -f "$package-$version-$release-srpmix-$SRPMIX_VERSION-$SRPMIX_RELEASE.src.rpm"; then
        echo "$package-$version-$release-srpmix-$SRPMIX_VERSION-$SRPMIX_RELEASE.src.rpm already exists" 1>&2
        echo "$package-$version-$release-srpmix"
        return
    fi
    group=$(rpm -qp --queryformat "%{Group}" $1)
    license=$(rpm -qp --queryformat "%{License}" $1)
    changelog=$(LANG=C rpm -qp --changelog $1 | sed 's/%/%%/g')
    if test "x$changelog" = "x(none)"; then
        changelog=""
    fi
    buildarch=$(rpm -qp --queryformat "%{BUILDARCHS}" $1)
    if test "x$buildarch" = "x(none)"; then
        buildarch="noarch"
    fi

    srcdir=/usr/share/srpmix/sources/$(echo $package | sed  's/\(^.\).*/\1/')
    srcdir=$srcdir/$package/$version-$release

    cat > $TMPDIR/SPECS/$package-$version-$release-srpmix.spec <<EOF
Summary: Source Information for package $package ($version-$release)
Name: $package-$version-$release-srpmix
Version: $SRPMIX_VERSION
Release: $SRPMIX_RELEASE%{?dist}
Source: `basename $srpm`
Autoreq: 0
BuildRequires: srpmix
BuildRequires: rsync
Buildarch: $buildarch

Buildroot: %{_tmppath}/%{name}-root
Group: $group
License: $license

%define __os_install_post true

%description
$description

%package archives
Group: $group
Summary: Source Archives for package $package ($version-$release)

%description archives
$description

%prep
rm -rf %{_builddir}/$package-$version-srpmix

%build
srpmix -f -v %{_builddir}/$package-$version-srpmix \
    %{_sourcedir}/`basename $srpm`
srpmix-plugin %{_builddir}/$package-$version-srpmix

%install
rm -rf \$RPM_BUILD_ROOT
mkdir -p \$RPM_BUILD_ROOT/$srcdir

rsync -a  \$(/bin/ls -d %{_builddir}/$package-$version-srpmix/* | grep -v LOG | grep -v SPECS\$) \$RPM_BUILD_ROOT/$srcdir

%clean
rm -rf \$RPM_BUILD_ROOT

%files
%defattr(-,root,root)
/usr/share/srpmix/sources/*/*/*/SRPMIX
/usr/share/srpmix/sources/*/*/*/pre-build
/usr/share/srpmix/sources/*/*/*/plugins
/usr/share/srpmix/sources/*/*/*/*.spec

%files archives
%defattr(-,root,root)
/usr/share/srpmix/sources/*/*/*/archives

%changelog
$changelog

EOF

    cp $srpm $TMPDIR/SOURCES/
    $RPMBUILD --quiet --define "_topdir $TMPDIR" -bs $TMPDIR/SPECS/$package-$version-$release-srpmix.spec > /dev/null
    mv $TMPDIR/SRPMS/$package-$version-$release-srpmix-$SRPMIX_VERSION-$SRPMIX_RELEASE*.src.rpm .
    rm $TMPDIR/SOURCES/`basename $srpm`
    echo "$package-$version-$release-srpmix"
}

function main
{
    verify_commands "${RPMBUILD}"
    parse_arguments "$@"
    #trap cleanup 0

    if test "x$NAME" = "x"; then
        NAME=$(basename $(dirname $1))
    fi

    TMPDIR=`mktemp -d`
    install -d $TMPDIR/{SPECS,BUILD,SOURCES,SRPMS}

    packages=""
    for srpm in $srpms
    do
        if test -f "$srpm"; then
            es_print dist-start --file=`basename $srpm` --timestamp="`LANG=C date`"
            packages="$packages $(create_srpm $srpm)"
            es_print dist-end --file=`basename $srpm` --timestamp="`LANG=C date`"
        else
            abort "No such file: $srpm"
        fi
    done

    create_meta_srpm $NAME $packages

}

try_source ${LIBSRPMIX}
es_time main "$@"
exit $?
