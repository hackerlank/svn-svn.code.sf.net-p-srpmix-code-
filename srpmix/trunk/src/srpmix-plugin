#!/bin/bash -e
#
########################################################################
#
# srpmix-plugin: Run plugin scripts
#
# Copyright (C) 2008 Masato Taruishi
#
# Author: Masato Taruishi <taruishi@redhat.com>
#
# program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################

LIBSRPMIX=libsrpmix.sh

SRPMIX_PLUGIN_DEBUG=

function try_source
{
    source $1
    if test $? != 0; then
        abort "cannot find $1"
	exit 1
    fi
}
try_source ${LIBSRPMIX}


ROOTDIR=a

function print_usage
{
    echo "Usage: "
    echo "  srpmix-plugin [--help|-h]"
    echo "  srpmix-plugin [--list|-L]"
    echo "  srpmix-plugin [--debug] [--enable=<plugins>] [--disable=<plugins>] [<ROOTDIR> ...]"
    echo 
    echo "<plugins> := <plugin0>[,<plugin1>...]"
    echo 
}

function abort
{
    echo "*** ABORT..." "$@" 1>&2
    exit 1
}

function list_source_dirs
{
    find $SRPMIX_SOURCES_DIR/*/*/ -maxdepth 1 | grep -v "/$"
}

function parse_arguments
{
    status=

    while [ $# -gt 0 ]; do
	case "$1" in
	    --help|-h)
		print_usage
		exit 0
		;;
            (--enable=*)
                arg=$(echo "$1" | sed 's/--enable=//' | tr , ' ')
                ENABLE_PLUGIN="$ENABLE_PLUGIN $arg"
		;;
            (--disable=*)
                arg=$(echo "$1" | sed 's/--disable=//' | tr , ' ')
                DISABLE_PLUGIN="$DISABLE_PLUGIN $arg"
		;;
            --list|-L)
		list_plugins
		exit 0
		;;
            # TODO: --freeze-into-rpm-package=DIR
	    --debug)
	         SRPMIX_PLUGIN_DEBUG=yes
		 PS4="${PS4}[plugin]"
                 set -x
		 ;;
	    (--*)
	        echo "No such option: $1" 1>&2
		print_usage
		exit 1
		;;
	    *)
		break
		;;
	esac
	shift
    done

    ROOTDIRS="$@"
    if test "x$ROOTDIRS" = "x"; then
        ROOTDIRS=$(list_source_dirs)
    fi
}

function verify_commands
{
    while [ $# -gt 0 ]; do
	if which $1 > /dev/null 2>&1; then
	    :
	else
	    echo "cannot find $1" 1>&2
	    abort
	fi
	shift 
    done
}

function is_enabled_plugin
{
    local p

    for p in $ENABLE_PLUGIN; do
        if test "x$p" = "x$1"; then
            return 0
        fi
    done

    for p in $DISABLE_PLUGIN; do
        if test "x$p" = "x$1"; then
            return 1
        fi
    done

    if test "x$ENABLE_PLUGIN" = "x"; then
        return 0
    fi

    return 1
}

function list_plugin_candidates
{
    local p
    local f
    local n


    find $SRPMIX_PLUGIN_DIR -perm +0100 -type f | sort -n | while read plugin; do
	f=$(basename $plugin)
	n=$($plugin --name)

        ( is_enabled_plugin ${f} || is_enabled_plugin ${n} ) \
	    && echo ${n} $plugin
    done

    for p in $SRPMIX_EXTRA_PLUGINS; do
	f=$(basename $p)
	n=$($p --name)

       ( is_enabled_plugin ${f} || is_enabled_plugin ${b} ) \
	   && echo ${n} $p
    done
}

function list_plugins
{
    local name
    local plugin

    list_plugin_candidates | sort -n | while read name plugin; do
	echo ${name} "=>" ${plugin}
    done
}

function main
{
    local debug_opt
    parse_arguments "$@"


    if test x$SRPMIX_PLUGIN_DEBUG != x; then
	debug_opt=--debug
    fi
    
    # TODO: Support multi cores.
    for d in $ROOTDIRS; do
        list_plugins | while read base dummy plugin; do
            $plugin $debug_opt $d || true
        done
    done
# TODO: return status, see srpmix-wrap
}


es_time main "$@"
exit $?
