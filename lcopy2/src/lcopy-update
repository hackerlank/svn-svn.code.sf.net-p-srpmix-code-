#!/bin/bash

source liblcopy.sh ||  exit 1


ROOT_DIR=
BASE_DIR=

function print_usage
{
    echo "Usage: "
    echo "$0 --help|-h"
    echo "$0 --root-dir=ROOT-DIR"
    echo "$0 BASE-DIR"
}

function parse_arguments
{
    while [ $# -gt 0 ]; do
	case "$1" in
	    --help|-h)
		oprint_usage
		exit 0
		;;
	    (--root-dir=*)
	        ROOT_DIR=${1/--root-dir=}
		if ! [ -d "$ROOT_DIR" ]; then
		    echo "no such directory: $ROOT_DIR" 1>&2
		    exit 1
		fi
		;;
	    --*)
		echo "unknown option: $1" 1>&2
		print_usage 1>&2
		exit 1
		;;
	    *)
		BASE_DIR=$1
		shift
		if ! lcopy_verify_directory "$BASE_DIR"; then
		    exit 1
		else
		    break
		fi
		;;
	    esac
	shift
    done

    if [ $# -gt 0 ]; then
	echo "too many arguments: $@" 1>&2
	print_usage 1>&2
	exit 1
    fi

    if [ -z "$ROOT_DIR" ] && [ -z "$BASE_DIR" ]; then
	echo "specify either ROOT-DIR or BASE-DIR" 1>&2
	print_usage 1>&2
	exit 1
    fi

    if [ -n "$ROOT_DIR" ] && [ -n "$BASE_DIR" ]; then
	echo "do not specify both ROOT-DIR or BASE-DIR" 1>&2
	print_usage 1>&2
	exit 1
    fi
}

function update
{
    local base_dir=$1
    local lcopy_file=${base_dir}/checkout.lcopy
    local update_dir=${base_dir}/pre-build
    local status


    if source ${lcopy_file}; then
	echo "failed to source ${lcopy_file}" 2>&1
	exit 1
    fi

    if [ -z "$LCOPY_VCS" ]; then
	echo "No LCOPY_VCS in ${lcopy_file}" 2>&1
	exit 1
    else
	local vcs_found
	for v in $(lcopy_backends_list); do
	    if [ "$LCOPY_VCS" = "$v" ] ;then
		vcs_found=yes
		break
	    fi
	done
	if [ -z "$vcs_found" ]; then
	    echo "unsupported vcs: $LCOPY_VCS" 1>&2
	    exit 1
	fi
    fi
 
    lcopy_backend_update ${vcs} ${lcopy_file} ${update_dir}
    status=$?

    if [ "$status" -eq "1" ]; then
	status=0
	lcopy_srpmix_plugin "${base_dir}"
    fi

    return $status
}


function main
{
    parse_arguments "$@"

    if [ -n "$ROOT_DIR" ]; then
	for d in "$ROOT_DIR"/[a-zA-Z0-9]/*/*; do
	    "$0" "$d"
	done
    else
	update "$BASE_DIR"
    fi
}

main "$@"