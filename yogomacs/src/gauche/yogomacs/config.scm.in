;; -*- scheme -*-
(define-module yogomacs.config
  (export load-config
	  config->proc
	  version
	  release)
  (use www.cgi)
  (use yogomacs.access)
  (use file.util)
  (use util.match)
  )
(select-module yogomacs.config)

(define config-dir "/etc/yogomacs")

(define (all-config-names)
  (map (compose sys-basename (lambda (n)
			       ((#/(.*)\.scm/ n) 1)))
       (glob #`",|config-dir|/*.scm")))

(define (load-config script-name)
  (and-let* ((env-val (or script-name 
			  (cgi-get-metavariable "SCRIPT_NAME")))
	     (m (#/^yogomacs-(.*)\.cgi$/ (sys-basename env-val)))
	     (conf-name (m 1))
	     (entry (format "~a.scm" conf-name))
	     ;; TODO
	     (dir config-dir)
	     ( (readable?  dir entry) )
	     (port (open-input-file 
		    (build-path dir entry)
		    :if-does-not-exist #f))
	     (conf (guard (e
			   (else #f))
			  (read port))))
    (close-input-port port)
    (cond
     ((not conf) #f)
     ((eof-object? (list)))
     (else 
      (cons (cons 'spec-conf conf-name)
	    conf)))))

(define (config->proc config)
  (match-lambda*
   ((key)
    (cdr (assq key config)))
   ((key value)
    (config->proc (cons `(,key . ,value)
			config)))))

(define (version) "@VERSION@")
(define (release) "@RPM_RELEASE@")

(provide "yogomacs/config")
