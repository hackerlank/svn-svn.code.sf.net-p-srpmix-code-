#!/bin/bash

# Copyright (C) 2010 Masatake YAMATO
# Copyright (C) 2010 Red Hat, Inc.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Author: Masatake YAMATO <yamato@redhat.com>
#



FORMAT=grep
LIMIT=30
LOG=
XGETTEXTS=
PRE_PROCESSED=no

function print_usage
{
    echo "Usage: "
    echo "	$0 --help|-h"
    echo "	$0 [--format=es|grep] [--pre-processed=no] [--limit=N] PATTERN|-|= XGETTEXT.out..."
    echo "	$0 [--format=es|grep] --pre-processed=yes [--limit=N] PATTERN|-|= XGETTEXT.es..."
}

function parse_arguments
{
    while [ $# -gt 0 ]; do
	case "$1" in
	    --help|-h)
		print_usage
		exit 0
		;;
	    (--format=*)
		FORMAT=${1/--format=}
		if [ "$FORMAT" = "es" ] || [ "$FORMAT" = "grep" ]; then
		    :
		else
		    print_usage 1>&2
		    exit 1
		fi
		;;
	    (--limit=*)
                LIMIT=${1/--limit=}
		;;
	    (--pre-processed=*)
	        PRE_PROCESSED=${1/--pre-processed=}
		;;
	    *)
		break
		;;
	esac
	shift
    done

    if [ $# -lt 2 ]; then
	print_usage 1>&2
	exit 1
    fi

    LOG=$1
    shift
    XGETTEXTS=$@

    if [ $PRE_PROCESSED != yes ]  && [ $PRE_PROCESSED != no ]; then
	print_usage 1>&2
	exit 1
    fi
}

function main
{
    parse_arguments "$@"
    
    {
	{ cat $XGETTEXTS  | { 
		if [ $PRE_PROCESSED = no ]; then
		    es-src-xgettext use-stdin
		else
		    cat
		fi
	    }
	}
	if [ "$LOG" = "-" ]; then
	    gosh -e '(port-for-each (lambda (l) (write `(log ,l)) (newline)) read-line)'
	elif [ "$LOG" = "=" ]; then
	    cat
	else
	    echo "$LOG" | gosh -e '(begin (write `(log ,(read-line))) (newline))'
	fi
    } | {
	es-filter-filelines
    } | {
	if [ "$FORMAT" = "es" ]; then
	    cat
	elif [ "$FORMAT" = "grep" ]; then
	    es-filter-spout :filelines :fileline $LIMIT \
		| es-dest-grep '(:fileline :file)' '(:fileline :line)' '(:fileline :msg)' '(1)'
	else
	    :
	fi
    }
}

main "$@"