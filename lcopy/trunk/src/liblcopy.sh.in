########################################################################
#
# liblcopy.sh: support shell functions for lcopy
#
# Copyright (C) 2007 Masatake YAMATO
#
# Author: Masatake YAMATO <yamato@redhat.com>
#
# program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################

LCOPY_VERSION=@VERSION@

prefix=@prefix@
exec_prefix=@exec_prefix@
libexecdir=@libexecdir@


LCOPY_LIBEXECDIR=${LCOPY_LIBEXECDIR:-"${libexecdir}/lcopy}"}
LCOPY_BACKENDDIR=${LCOPY_BACKENDDIR:-"${LCOPY_LIBEXECDIR}/backends"}

LCOPY_PLUGINDIR=${LCOPY_PLUGINDIR:-"${LCOPY_LIBEXECDIR}/plugins"}


function lcopy_checkout
{
    local vcs

    vcs=$1

    shift 1
    "${vcs}_checkout" "$@"
}

function lcopy_checkout_after
{
    local vcs

    vcs=$1

    shift 1

    if lcopy_has_func "${vcs}_checkout"; then
	"${vcs}_checkout" "$@"
    fi
}

function lcopy_checkout_cmdline
{
    local vcs

    vcs=$1

    shift 1
    "${vcs}_make_checkout_cmdline" "$@"
    
}

function lcopy_package_hash
{
    echo ${1:0:1}
}

function lcopy_package_name
{
    echo ${1}
}

function lcopy_branch_name
{
    if test -z "$1"; then
	echo "trunk"
    elif test "$1" = "-"; then
	echo "$trunk"
    else
	echo "$1"
    fi
}

function lcopy_make_pb_name
{
    local package
    local branch

    package=$1
    branch=$2

    if test -z "$branch"; then
	echo "$package"
    elif test "$branch" = "-"; then
	echo "$package"
    else
	echo "${package}--${branch}"
    fi
}

function lcopy_is_member
{
    local target=$1
    shift 1

    for v in "$@"; do
	if test "$target" = "$v"; then
	    return 0
	fi
    done
    
    return 1
}



#
# Load backends
#
# Expected function for each backends
#
# - *_p
# - *_update
#
# - *_make_checkout_cmdline
# - *_checkout
#

for b in ${LCOPY_BACKENDDIR}/lcopy-*.*sh; do
    if test -r $b; then
	source $b
    fi
done


#
# Plugins
#
function lcopy_list_plugins
{
    test -d $LCOPY_PLUGINDIR && \
	find $LCOPY_PLUGINDIR -perm +0100 -type f | sort | while read plugin
    do
        echo $plugin
    done
}

# lcopy_run_plugins LOGFILE VCS PWD TSTAMP
function lcopy_run_plugins
{
    local log=$1;
    shift

    test -d $LCOPY_PLUGINDIR && \
	find $LCOPY_PLUGINDIR -perm +0100 -type f | sort |  while read plugin
    do
	es_print lcopy start-running-plugin "\"$plugin\"" | sudo -H -u lcopy tee -a $log > /dev/null
        $plugin "$@"
	es_print lcopy end-running-plugin "\"$plugin\"" --status=$? | sudo -H -u lcopy tee -a $log > /dev/null
    done
}


function lcopy_has_func
{
    type $1 > /dev/null 2>&1 
}

########################################################################
#
function es_echo_n
{
    printf "%s" "$*"
}
#
########################################################################

########################################################################
#
# es_time
#
function es_time
{
    TIMEFORMAT=$'(time :real %R :user %U :sys %S)' 
    time $@
    return $?
}
#
########################################################################


########################################################################
#
# es_print is taken from es-lang-sh-print. 
#
function es_print
{
    es_print_value=no


    es_echo_n "("

    while [ $# -gt 0 ]; do
	case "$1" in 
	    --*=*)
                if test ${es_print_value} = yes; then
		    es_echo_n ") "
		fi

                es_echo_n "`echo $1 | sed -e 's/^--\([^=]*\)=\(.*\)$/:\1 \2/'` "
		es_print_value=no

		shift
		;;
	    --*)
		if test ${es_print_value} = yes; then
		    es_echo_n ") "
		    es_print_value=no
		fi
		
		es_echo_n "`echo $1 | sed -e 's/^--/:/'` "
		es_print_value=yes
		es_echo_n "("

		shift
		;;
	    -*=*)
                if test ${es_print_value} = yes; then
		    es_echo_n ") "
		fi

                es_echo_n "`echo $1 | sed -e 's/^-\([^=]*\)=\(.*\)$/:\1 \2/'` "
		es_print_value=no

		shift
		;;
	    -*)
		if test ${es_print_value} = yes; then
		    es_echo_n ") "
		    es_print_value=no
		fi
		
		es_echo_n "`echo $1 | sed -e 's/^-/:/'` "
		es_print_value=yes
		es_echo_n "("

		shift
		;;
	    *)
		es_echo_n "$1 "
		shift
		;;
	    esac
    done
    
    if test ${es_print_value} = yes; then
	    es_echo_n ")"
	    es_print_value=no
    fi
    echo ")"
}
#
########################################################################

: libcopy.sh ends here
