#!/usr/bin/env bash

#
# bash is really needed.
#

ROOT_DIR=/var/lib/lcopy
SOURCES_DIR=${ROOT_DIR}/sources
SPECS_DIR=${ROOT_DIR}/specs
LOG_DIR=${ROOT_DIR}/log


PACKAGE=
PHASH=
BRANCH=trunk
REPO=
MODULE=
VCS=
RELEASE=0

NO_SPEC=
ONLY_SPEC=

SUPPORTED_VCSs="cvs git git-clone svn hg bzr darcs"
function print_usage
{
    echo "Usage: "
    echo "lcopy [--release=RELEASE] [--branch=BRANCH] [--no-spec|--only-spec] vcs commands..."
    echo "lcopy [--list-plugins] "
    echo ""
    echo "lcopy [--help|-h]"
    echo ""
    echo "Expected commands line for each vcs:"
    for vcs in ${SUPPORTED_VCSs}; do

	echo ${vcs}:
	${vcs}_checkout_print_usage
	echo

    done
}

#
# plugin
# 
PREFIX=/usr/libexec
PLUGINDIR=${PREFIX}/lcopy/plugins


function main
{
    local tstamp

    cd ${SOURCES_DIR}

    while [ $# -gt 0 ]; do
	case "$1" in
	    --help|-h)
		print_usage
		exit 0
		;;
	    --release=*)
		RELEASE=${1/--release=/}
		shift 1
		;;
	    --branch=*)
		BRANCH=${1/--branch=/}
		shift 1
		;;
	    --no-spec)
		NO_SPEC=yes
		shift 1
		;;
	    --only-spec)
		ONLY_SPEC=yes
		shift 1
		;;
	    --list-plugins)
	        lcopy_list_plugins
	        exit 0
	        ;;
	    *)
		break
		;;
	esac
    done

    if test -z "$1"; then
	echo "Too few arguments" 2>&1
	print_usage 2>&1
	exit 1
    fi

    if ! lcopy_is_member "${1}" $SUPPORTED_VCSs; then
	echo "unknown vcs: ${1}" 2>&1
	print_usage 2>&1
	exit 1
    fi

    if ! ${1}_checkout_parse_cmdline "$@"; then
	echo "failed in the command line for ${1}" 2>&1
	print_usage 2>&1
	exit 1
    fi
    PHASH=$(lcopy_package_hash $PACKAGE)

    if test "x$ONLY_SPEC" = xyes ; then
	make_specs
	return $?
    fi

    sudo -H -u lcopy mkdir -p ${PHASH}/${PACKAGE}
    cd ${PHASH}/${PACKAGE}
    if do_checkout; then
	status=$?
	tstamp=`LANG=C date`
	es_print lcopy checkout \
	    :cmdline \""$*"\"   \
	    :status ${status}   \
	    :date \""${tstamp}"\" | \
	    sudo -H -u lcopy tee -a ${LOG_DIR}/lcopy-checkout.es > /dev/null
	    
	cd ${BRANCH}
	status=$?
	sudo -H -u lcopy mkdir -p ${LCOPY_PRIVATEDIR}

	if test "$status" = 0; then

	    if test x$NO_SPEC != xyes; then
		make_specs
	    fi

	    do_checkout_after
# TODO: plugin directory
	    lcopy_run_plugins ${LOG_DIR}/lcopy-refresh.es \
		"${VCS}" "$(pwd)" "${tstamp}"

	fi
    fi
}

function do_checkout
{
    sudo -H -u lcopy $(lcopy_checkout "$VCS" "$REPO" "$BRANCH" "$MODULE")
}

function do_checkout_after
{
    sudo -H -u lcopy $(lcopy_checkout_after "$VCS" "$REPO" "$BRANCH" "$MODULE")
}

function make_specs
{
    sudo -H -u lcopy \
    lcopy-genspec --spec-type=subscription	\
        --package=$PACKAGE			\
        --branch=$BRANCH			\
        --repo=$REPO				\
        --module=$MODULE			\
        --vcs=$VCS				\
        --release=$RELEASE			\
        --output-dir=$SPECS_DIR			

    sudo -H -u lcopy \
    lcopy-genspec --spec-type=link		\
        --package=$PACKAGE			\
        --branch=$BRANCH			\
        --release=$RELEASE			\
        --output-dir=$SPECS_DIR
}

source liblcopy.sh
main "$@"
