#!/bin/bash

BACKEND=dwatch
VERSION="0.0.0"

source liblcopy_backends.sh || exit 1

function write_spec
{
    local dpkg=$1

    common_write_spec 
    printf "DWATCH_DPKG=\"%s\"\n" "${dpkg}"
}

function dpkg_check
{
    local dpkg=$1
    local dpkg_spec="^[-a-zA-Z0-9]+$"

    if [ -z "${dpkg}" ]; then
	echo "broken dwatch command line: cannot find debian package specification" 1>&2
	return 1
    elif ! ( [[ "${dpkg}" =~ $dpkg_spec ]]; then
	echo "broken dwatch command line: unrecognizable dpkg specification: $dpkg" 1>&2
	echo "expected dpkg specification: " 1>&2
	echo "	$dpkg_spec" 1>&2
	return 1
    fi

    return 0

}

#
# HELP
#
function dwatch_help_help
{
    common_help_help "$@"
}

function dwatch_help
{
    common_help "$@"
}

#
# GENCONF_FORMAT
# 
function dwatch_genconf_format
{
    common_genconf_format "$@"
}

#
# GENCONF
# 
function dwatch_help_genconf
{
    local prefix

    if [ "$1" != "format" ]; then
	prefix="$0 genconf"
    fi

    echo "	" ${prefix} dwatch 'checkout' DPKG
}

function dwatch_genconf
{
    local original=$@
    local cmd
    local dpkg


    if [ $# != 2 ]; then
	echo "wrong number of arguments: $original" 1>&2
	return 1
    fi


    cmd=$1
    shift
    if ! [ "$cmd" = "checkout" ] ; then
	echo "unknown command for checkout: $cmd" 1>&2
	return 1
    fi
    
    dpkg=$1
    shift
    if ! dpkg_check "${dpkg}"; then
	return 1
    fi
    write_spec "${dpkg}"
    return 0
}

#
# CHECKOUT
#
function dwatch_help_checkout
{
    echo "	$0 " "checkout" "FILE.lcopy" "OUTPUT-DIR"
}

function dwatch_checkout
{
    local input=$1
    local output_dir=$2

    if ! source "$input"; then
	return 1
    fi

    if [ -z "${DWATCH_DPKG}" ]; then
	echo "no DWATCH_DPKG in $input" 1>&2
	return 1
    fi

    ( 
	cd ${output_dir}

	common_spawn dwatch checkout "${DWATCH_DPKG}"
    )

    return $?
}

#
# PRINT_CMDLINE
#
function dwatch_help_print_cmdline
{
    echo "	$0 " "print_cmdline" "FILE.lcopy" "checkout"
}

function dwatch_print_cmdline
{
    local input=$1
    local cmd=$2

    if ! source "$input"; then
	return 1
    fi

    if [ "$cmd" = "checkout" ]; then
	if [ -z "${DWATCH_DKPG}" ]; then
	    echo "no DWATCH_DPKG in $input" 1>&2
	    return 1
	fi
	echo dwatch checkout "${DWATCH_DPKG}"
    else
	return 1
    fi

    return 0
}

#
# UPDATE
#
function dwatch_help_update
{
    echo "	$0 " "update" "FILE.lcopy" "UPDATE-DIR"
}

function dwatch_update
{
    local input=$1
    local update_dir=$2

    cd "${update_dir}"

    common_spawn dwatch update
    local status=$?

    if [ "$status" = 3 ]; then
	return 0
    elif [ "$status" = 0 ]; then
	return 1
    else
	return 2
    fi
}

#
# DIRP
# 
function dwatch_help_dirp
{
    echo "	$0 " "dirp" "[DIR]"
}

function dwatch_dirp
{
    local dir=${1:-$(pwd)}
    
    test -d ${dir}/.dwatch
}

#
# REBIRTH
#
function dwatch_help_rebirth
{
    echo "	$0 " "rebirth" "[DIR]"
}

function dwatch_rebirth
{
    local dir=${1:-$(pwd)}

    if ! dwatch_dirp ${dir}; then
	echo "Not dwatch directory: ${dir} " 1>&2
	return 1
    fi


    local dwatch_info=$(dwatch info)
    if [ $? != 0 ]; then
	echo "failed in dwatch info invocation (pwd: $(pwd))" 1>&2
	return 1
    fi

    local dpkg=$(echo $dwatch_pkg | sed -n -e s/PACKAGE: (.*)/\1/)
    if ! dpkg_check "${dpkg}"; then
	return 1
    fi

    write_spec "${dpkg}"
}

function main
{
    common_main "$@"
    return $?
}

main "$@"
exit $?




# http://git.debian.org/?p=devscripts/devscripts.git;a=blob;f=scripts/uupdate.sh;h=ab24d54d0712308c2200e994c064ec5c5732e1f3;hb=HEDA
# http://packages.debian.org/ja/sid/devscripts
# usage: http://www.debian.org/doc/maint-guide/ch-update.en.html

# # sudo yum -y install dpkg-devel
# # git clone git://git.debian.org/devscripts/devscripts.git
# $ cat bind.watch
# version=3
# http://ftp.yz.yamagata-u.ac.jp/pub/network/isc/bind/(\d.*)/ \
#   bind-(\d.*)\.tar\.gz

# $ perl -I devscripts devscripts/scripts/uscan.pl \
#   --watchfile bind.watch \
#  --upstream-version 9.0.0 \
#  --package bind  \
#  --dehs
# <dehs>
# <package>bind</package>
# <debian-uversion>9.0.0</debian-uversion>
# <debian-mangled-uversion>9.0.0</debian-mangled-uversion>
# <upstream-version>9.7.1</upstream-version>
# <upstream-url>http://ftp.yz.yamagata-u.ac.jp/pub/network/isc/bind/9.7.1/bind-9.7.1.tar.gz</upstream-url>
# <status>Newer version available</status>
# <messages>Not downloading as --package was used.  Use --download to force downloading.</messages>
# </dehs>


# wget -nH --mirror http://ftp.debian.org/debian/pool/main/  --accept '*.diff.gz'


# *.watch: *.diff.gz
# 	 ...

# filterdiff -z -i '*/debian/watch' /old/tmp/debian/main/a/aggregate/aggregate_1.6-6.diff.gz |  patch  -o - -s
