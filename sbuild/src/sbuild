#!/bin/bash

PKGCONFDIR=/etc/sbuild
PKGDATADIR=/usr/share/sbuild
LIST_MAKER=cat
DONT_CREATEREPO=
RSYNC=rsync
SOP_CONF=sop.cf

if ! source ${PKGCONFDIR}/sbuild.cf; then
    echo "failed to read ${PKGCONFDIR}/sbulid.cf" 1>&2
    exit 1
fi

if [ "x$1" != x ] && [ -r "$1/${SOP_CONF}" ]; then
    source "$1/${SOP_CONF}"
elif test -f /etc/sop/${SOP_CONF}; then
    source /etc/sop/${SOP_CONF}
else
    echo "Cannot load ${SOP_CONF} file" 1>&2
    exit 1
fi

# verify_command srpmix
function print_usage
{
    echo "Usage: "
    echo "  sbuild [--tmpdir=TMPDIR]"
    echo "         [--output-dir=OUTPUTDIR]"
    echo "         [--release=RELEASE]"
    echo "         [--debug]"
    echo "         [--blacklist-dir=BALCKLISTDIR]"
    echo "         [--tstamp-dir=TSTAMPDIR]"
    echo "         [--vpath-file=VPATHFILE]"
    echo "         [--all-pkgs]"
    echo "         [--createrepo-only]"
    echo "         [--dont-createrepo]"
    echo "         [--use-tmpfs]"
}

function parse_arguments
{
    while [ $# -gt 0 ]; do
	case "$1" in
	    --help|-h)
		print_usage
		exit 0
		;;
	    --tmpdir=*)
                SBUILD_TMPDIR="$(echo $1 | sed -e 's/--tmpdir=//')"
		;;
	    --outputdir=*)
	        SBUILD_OUTPUTDIR="$(echo $1 | sed -e 's/--outputdir=//')"
		;;
	    --release=*)
                # RELEASE=`date +%Y%m%d`
	        SBUILD_RELEASE="$(echo $1 | sed -e 's/--release=//')"
		;;
	    --debug)
	        SBUILD_DEBUG=y
                ;;
            --blacklist-dir=*)
	        SBUILD_BLACKLISTDIR="$(echo $1 | sed -e 's/--blacklist-dir=//')"
	        ;;
            --tstamp-dir=*)
	        SBUILD_TSTAMPDIR="$(echo $1 | sed -e 's/--tstamp-dir=//')"
	        ;;
            --vpath-file=*)
	        SBUILD_VPATHFILE="$(echo $1 | sed -e 's/--vpath-file=//')"
		;;
	    --all-pkgs)
	        LIST_MAKER=${PKGDATADIR}/sbuild-srpm-list.sh
		;;
	    --createrepo-only)
	        run_creterepo
		exit $?
		;;
            --dont-createrepo)
	        DONT_CREATEREPO=1
		;;
	    --use-tmpfs)
	        if ! { mount | grep ${SBUILD_TMPDIR}; } > /dev/null; then
		    mount -t tmpfs -o size=2G tmpfs "${SBUILD_TMPDIR}"
		fi
		;;
            *)
	        print_usage 1>&2
		exit 1
		;;
        esac
	shift
    done
}


function run_make 
{
    local h
    local f
    local last_h


    if test -z "$SBUILD_VPATHFILE"; then
	${PKGDATADIR}/sbuild-vpath-list.sh > ${SBUILD_TSTAMPDIR}/vpath.list
	SBUILD_VPATHFILE=${SBUILD_TSTAMPDIR}/vpath.list
    fi

    $LIST_MAKER \
    | while read f; do
	f=$(basename $f)
	h=$(echo $f | sed 's/\(.\).*/\1/')

	if test "x${h}" != "x${last_h}"; then
	    last_h=$h
	    echo "Processing $h"
	    install -d ${SBUILD_TSTAMPDIR}/$h
	fi

	${PKGDATADIR}/sbuild.mk			\
            DEBUG=$DEBUG			\
            TMPDIR=${SBUILD_TMPDIR}		\
            OUTPUTDIR=${SBUILD_OUTPUTDIR}	\
	    VPATHFILE=${SBUILD_VPATHFILE}	\
	    BLACKLISTDIR=${SBUILD_BLACKLISTDIR}	\
            RELEASE=${SBUILD_RELEASE}		\
	    DEBUG=${SBUILD_DEBUG}               \
	    -k -l4 -e				\
	    -C  ${SBUILD_TSTAMPDIR}/$h			\
	    $(echo $f | sed 's/\.rpm/.log/g')
    done

    
}

function run_creterepo
{
    ${PKGDATADIR}/sbuild-createrepo.mk -C $SBUILD_OUTPUTDIR
}

function run_rsync
{
    mkdir -p ${SOP_BLACKLIST_DIR}
    rsync -a ${SBUILD_BLACKLISTDIR}/ ${SOP_BLACKLIST_DIR}
}

function main
{
    local r


    parse_arguments "$@"
    run_make

    r=$?

    run_rsync

    if test "x${DONT_CREATEREPO}" != x; then
	return $r;
    fi

    run_creterepo
}

time main "$@"