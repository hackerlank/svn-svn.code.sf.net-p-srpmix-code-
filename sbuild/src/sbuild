#!/bin/bash
# (sysctl -w kernel.randomize_va_space=0 )


PKGCONFDIR=/etc/sbuild
PKGDATADIR=/usr/share/sbuild
BUILDERSDIR=${PKGDATADIR}/builders

SBUILD_CONF=${PKGCONFDIR}/sbuild.cf
SOP_CONF_DIR=/etc/sop

CREATEREPO_ONLY=
DONT_CREATEREPO=
CRADLE=

SHORT_CUT=
FORCE=
DATE=$(date +%Y%m%d)
DATE_FOR_LOG=$(date --rfc-3339=date)

function print_usage
{
    echo "Usage: "
    echo "  sbuild --help"
    echo "  sbuild [--sbuild-conf=FILE] [--sop-conf-dir=DIR]"
    echo "         [--short-cut]"
    echo "         [--tmpdir=TMPDIR]"
    echo "         [--release=RELEASE]"
    echo "         [--debug]"
    echo "         [--tstamp-dir=TSTAMPDIR]"
    echo "         [--cradle=NAME]"
    echo "         [--createrepo-only]"
    echo "         [--dont-createrepo]"
    echo "         [--use-tmpfs=GBYTE]"
    echo "         [--jobs=J]"
    echo "         [--load=L]"
    echo "         [--short-cut]"
    echo "         [--force]"
    echo ""
    echo "If --force is given, BUILD=no specification in the "
    echo "cradle conf is ignored."
}

function prepare_conf
{
    while [ $# -gt 0 ]; do
	case "$1" in
	    --sbuild-conf=*)
                SBUILD_CONF=${1/--sbuild-conf=/}
		;;
	    --sop-conf-dir=*)
                SOP_CONF_DIR=${1/--sop-conf-dir=/}
                ;;
	 esac
	 shift
    done

    if test -f "${SBUILD_CONF}"; then
	source "${SBUILD_CONF}"
    else
	echo "Cannot load ${SBUILD_CONF} file" 1>&2
	exit 1
    fi

    if test -f "${SOP_CONF_DIR}/sop.cf"; then
	source "${SOP_CONF_DIR}/sop.cf"
    else
	echo "Cannot load ${SOP_CONF_DIR}/sop.cf file" 1>&2
	exit 1
    fi

}

function parse_arguments
{
    local tmpfs_size


    prepare_conf "$@"

    while [ $# -gt 0 ]; do
	case "$1" in
	    --help|-h)
		print_usage
		exit 0
		;;
	    --sbuild-conf=*)
                :
		;;
	    --sop-conf-dir=*)
                :
                ;;
	    --tmpdir=*)
                SBUILD_TMPDIR=${1/--tmpdir=/}
		;;
	    --release=*)
                # RELEASE=`date +%Y%m%d`
	        SBUILD_RELEASE=${1/--release=/}
		;;
	    --debug)
	        SBUILD_DEBUG=y
                ;;
	    --cradle=*)
	        CRADLE=${1/--cradle=/}
		;;
            --tstamp-dir=*)
	        SBUILD_TSTAMPDIR=${1/--tstamp-dir=/}
	        ;;
	    --createrepo-only)
	        CREATEREPO_ONLY=yes
		;;
            --dont-createrepo)
	        DONT_CREATEREPO=yes
		;;
	    --use-tmpfs=*)
	        tmpfs_size=${1/--use-tmpfs=/}
		;;
	    --load=*)
	        SBUILD_LOAD=${1/--load=/}
		;;
	    --jobs=*)
	        SBUILD_JOBS=${1/--jobs=/}
		;;
	    --short-cut)
	        SHORT_CUT=yes
		;;
            --force)
	        FORCE=yes
		;;
            *)
	        print_usage 1>&2
		exit 1
		;;
        esac
	shift
    done

    mkdir -p ${SBUILD_TMPDIR}
    if [ -n "${tmpfs_size}" ]; then
	if { mount | grep ${SBUILD_TMPDIR}; } > /dev/null; then
	    :
	else
	    if ! mount -t tmpfs -o size=${tmpfs_size}G tmpfs "${SBUILD_TMPDIR}"; then
		echo "Failed in mounting tmpfs on "${SBUILD_TMPDIR}" with size ${tmpfs_size}G" 1>&2
		exit 1
	    fi
	fi
    fi    

    SBUILD_JOBS=${SBUILD_JOBS:-$(cat /proc/cpuinfo  | grep ^processor  | wc -l)}
    SBUILD_LOAD=${SBUILD_LOAD:-$(cat /proc/cpuinfo  | grep ^processor  | wc -l)}
}


function run_builder
{
    local cf=$1
    local name=$2

    source $cf
    if test -z "${BUILD}"; then
	echo "No BUILD in $cf" 1>&2
	return 1
    fi

    if test "${BUILD}" != yes; then
	if [ "${FORCE}" != yes ]; then
	    return 0
	fi
    fi

    if test -z "${BUILDERS}"; then
	echo "No BUILDERS in $cf" 1>&2
	return 1
    fi

    for b in ${BUILDERS//,/ }; do
	if [ -x "${BUILDERSDIR}"/"${b}" ]; then
	    ( set -x
		export SBUILD_JOBS="$SBUILD_JOBS"
		export SBUILD_LOAD="$SBUILD_LOAD"
		export SBUILD_TSTAMPDIR="$SBUILD_TSTAMPDIR"
		export SBUILD_RELEASE="$SBUILD_RELEASE"
		export SBUILD_DEBUG="$SBUILD_DEBUG"
		export SBUILD_TMPDIR="$SBUILD_TMPDIR"
		"${BUILDERSDIR}"/"${b}" "$cf" "$name" "${SBUILD_CONF}" "${SOP_CONF_DIR}/sop.cf" "${DATE}" "${DATE_FOR_LOG}")
	    return $?
	else
	    echo "No builder for ${b}" 1>&2
	    return 1
	fi
    done
}

function run_rsync
{
    local cf=$1
    local name=$2

    source $cf
    if test -z "${BUILD}"; then
	echo "No BUILD in $cf" 1>&2
	return 1
    fi

    if test "${BUILD}" != yes; then
	if [ "${FORCE}" != yes ]; then
	    return 0
	fi
    fi

    if [ -n "${SBUILD_TSTAMPDIR}" ] && [ -d "${SBUILD_TSTAMPDIR}/${name}" ]; then
	mkdir -p ${SOP_CRADLES_DIR}/${name}/sbuild
	rsync -a --delete ${SBUILD_TSTAMPDIR}/${name}/ ${SOP_CRADLES_DIR}/${name}/sbuild
    fi
}

function run_creterepo
{
    local cf=$1
    local name=$2
    local repo=${SOP_CRADLES_DIR}/${name}/repo

    source $cf

    if test -d ${repo}; then
	${PKGDATADIR}/sbuild-createrepo.mk CREATEREPO_OPTS="${CREATEREPO_OPTS}" -C ${repo}
    fi
}

function repogc
{
    local cf=$1
    local name=$2
    local repo=${SOP_CRADLES_DIR}/${name}/repo

    source $cf
    find ${repo} -type f \
	| gosh ${PKGDATADIR}/gc-repo-srpmix-version.scm


    if test -z "${GC}"; then
	echo "No GC in $cf" 1>&2
	return 1
    fi
    
    if test -z "${BUILD}"; then
	echo "No BUILD in $cf" 1>&2
	return 1
    fi
    
    if test ${GC} != yes; then
	return 0
    fi

    if test "${BUILD}" != yes; then
	if [ "${FORCE}" != yes ]; then
	    return 0
	fi
    fi

    local dist_mapping=${SOP_CRADLES_DIR}/${name}/dist-mapping/${name}.es
    if test -f ${dist_mapping}; then
	{
	    cat ${dist_mapping}
	    echo
	    find ${repo} -name '*.noarch.rpm' | grep -v 'dir-pkg\|weakview' | while read f; do
		rpm -qp --nosignature --queryformat "(in-repo :name \"%{NAME}\" :file \"$f\")" $f
		echo 
	    done 
	} | gosh ${PKGDATADIR}/gc-repo-pkg-version.scm | while read f; do
	    echo "(gc-repo-pkg-version \"${f}\")"
	    rm -f ${f}
	done
    fi
}

function create_weakview
{
    local cf=$1
    local name=$2
    local today
    local dist_pattern
    local pkg_pattern
    
    source $cf


    if test -z "${GC}"; then
	echo "No GC in $cf" 1>&2
	return 1
    fi
    
    if test -z "${BUILD}"; then
	echo "No BUILD in $cf" 1>&2
	return 1
    fi
    
    if test "${BUILD}" != yes; then
	if [ "${FORCE}" != yes ]; then
	    return 0
	fi
    fi

    local repo=${SOP_CRADLES_DIR}/${name}/repo
    local output=${repo}/weakview
    local dist_mapping=${SOP_CRADLES_DIR}/${name}/dist-mapping
    for f in ${dist_mapping}/*.es; do
	if test -f $f; then
	    local body0=$(basename $f .es)
	    local body=$(echo $body0 | tr . -)
	    local alias=
	    dist_pattern=${output}/srpmix-weakview-dist-${body}-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]*.noarch.rpm
	    pkg_pattern=${output}/srpmix-weakview-packages-${body}-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]*.noarch.rpm

	    if test ${GC} = yes && test "$body0" = "${name}" ; then
		rm -f ${dist_pattern}
		rm -f ${pkg_pattern}
		alias=${body}
		body=${body}-${DATE}
	    fi
	
	    if ( ! test -f ${output}/srpmix-weakview-dist-${body}*.noarch.rpm ) || \
		test $f -nt ${output}/srpmix-weakview-dist-${body}*.noarch.rpm; then
		rm -f ${output}/srpmix-weakview-dist-${body}*.noarch.rpm
		create_weakview_dist $f ${body} ${repo} ${alias}
	    fi
	    if ( ! test -f ${output}/srpmix-weakview-packages-${body}*.noarch.rpm ) || \
		test $f -nt ${output}/srpmix-weakview-packages-${body}*.noarch.rpm; then
		rm -f ${output}/srpmix-weakview-packages-${body}*.noarch.rpm
		create_weakview_packages $f ${body} ${repo} ${alias}
	    fi
	fi
    done
}

function create_comps
{
    local cf=$1
    local name=$2

    source $cf

    if test -z "${GC}"; then
	echo "No GC in $cf" 1>&2
	return 1
    fi

    local dist_mapping=${SOP_CRADLES_DIR}/${name}/dist-mapping
    local repo_dir=${SOP_CRADLES_DIR}/${name}/repo
    for f in ${dist_mapping}/*.es; do
	if test -f $f; then
	    local body0=$(basename "$f" .es)
	    local body=$(echo $body0 | tr . -)

	    if test ${GC} = yes && test "$body0" = "${name}" ; then
		body="$body-${DATE}"
	    fi

	    printf "(srpmix-group \"%s\")\n" "$body"
	    cat "$f"
	fi
    done | gosh ${PKGDATADIR}/create-comps.scm > ${repo_dir}/comps.xml
}

function create_repofile
{
    local cf=$1
    local name=$2
    local protocols=file

    for p in $protocols; do
	local repo_name_body=$(echo $name | tr . -)
	local repo_name="srpmix-${p}-${repo_name_body}"
	local output_file=${SOP_CRADLES_DIR}/${name}/$p.repo
	create_${p}_repofile $repo_name $name > $output_file
    done
}

function create_file_repofile
{
    local repo_name=$1
    local name=$2
    local p=file

    cat  <<EOF
[${repo_name}]
name=Srpmix packages for $name (via $p)
baseurl=file://${SOP_CRADLES_DIR}/${name}/repo
enable=0
gpgcheck=0
EOF
}

function create_weakview_dist
{
    local es_file=$1
    local name=$2
    local output=$3
    local alias=$4

    if [ -n "${alias}" ]; then
	alias="--alias=$alias"
    fi

    cat $es_file | srpmix-weakview-dist --name=${name} --output-dir=$output --make-rpm $alias
}

function create_weakview_packages
{
    local es_file=$1
    local name=$2
    local output=$3
    local alias=$4

    if [ -n "${alias}" ]; then
	alias="--alias=$alias"
    fi
    
    cat $es_file | srpmix-weakview-packages --name=${name} --output-dir=$output --make-rpm $alias
}

function main
{
    local cf
    local name

    correct_core
    prepare_conf "$@"	
    parse_arguments "$@"

    for cradle in ${SOP_CRADLES_DIR}/*; do

	if ! [ -d "$cradle" ]; then
	    continue
	fi

	cf=${cradle}/cf
	name=$(basename ${cradle})

	if test -z "$CRADLE" \
	    || test "$CRADLE" = $name; then

	    if test -z "$CREATEREPO_ONLY" \
		&& test -z "$SHORT_CUT"; then
		( run_builder $cf $name )
		( run_rsync $cf $name )
	    fi

	    if test -z "$DONT_CREATEREPO"; then
                ( repogc $cf $name )
		( create_weakview $cf $name )
		( create_comps $cf $name )
		( create_repofile $cf $name )
		( run_creterepo $cf $name )
	    fi
	fi | tee ${cradle}/log/build-${DATE_FOR_LOG}.log
    done

    
}

function correct_core
{
    if test -f /proc/sys/kernel/core_pattern; then
	ulimit -c unlimited
	echo /tmp/srpmix-core-%p-%s-%e > /proc/sys/kernel/core_pattern
    fi
}

time main "$@"
