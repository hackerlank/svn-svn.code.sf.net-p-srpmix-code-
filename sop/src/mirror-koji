#!/bin/bash
cf=$1
log=$2

source $cf

if test -z "$KOJI_HOST"; then
    echo "No KOJI_HOST in $1" 1>&2
    exit 1
fi

if test -z "$KOJI_DIST"; then
    echo "No KOJI_DIST in $1" 1>&2
    exit 1
fi


URL=http://$KOJI_HOST
DIST=$KOJI_DIST
OUTPUT_DIR=$(pwd)
LOG=$log
SNAPSHOT=/dev/null
# SNAPSHOT=${2:-/dev/null}

function newer_name_p
{
    gosh -b -e "(begin (use gauche.version) (exit (if (version>? \"$1\" \"$2\" ) 0 1)))"
}

function delete_header
{
    grep -v "^Build" | grep -v -e "^---"
}

function get_srpm
{
    local p=$1
    local v=$2
    local r=$3

    wget -q ${URL}/packages/$p/$v/$r/src/$p-$v-$r.src.rpm
}

function prepare
{
    if ! test -d ${OUTPUT_DIR}; then
	echo "No such directory: ${OUTPUT_DIR}" 1>&2
	exit 1
    fi
}

function latest
{
    local snapshot=$1
    local dist=$2
    if test -f "${snapshot}" && test ${snapshot} != /dev/null; then
	cat "${snapshot}"
    else
	koji latest-pkg --all --paths ${dist} | tee ${snapshot} 
    fi \
    | delete_header
}

function rearrange
{
    cut -f 1 -d ' '				\
	| sed -e 's|/mnt/koji/packages/||'	\
	| tr / ' '				
}

function main
{
    local c
    local f


    prepare
    latest ${SNAPSHOT} ${DIST}			\
	| rearrange				\
	| while read p v r; do
	c=${p:0:1}
	mkdir -p $OUTPUT_DIR/$c
	(
	    cd $OUTPUT_DIR/$c
	    f=$(ls $p-[0-9]*.src.rpm 2>/dev/null)
	    if ! test -f "$f"; then
		echo "(lcopy-koji new \"$p-$v-$r.src.rpm\")" >> $LOG
		get_srpm $p $v $r
	    elif newer_name_p $v-$r.src.rpm $(echo "$f" | sed -e s"/$p-\(.*\)/\1/"); then
		echo "(lcopy-koji update :new \"$p-$v-$r.src.rpm\" :old \"$f\")"  >> $LOG
		get_srpm $p $v $r
		rm "$f"
            else
		echo "(lcopy-koji latest \"$p-$v-$r.src.rpm\" :date)"  >> $LOG
	    fi
       )
    done
}

main
