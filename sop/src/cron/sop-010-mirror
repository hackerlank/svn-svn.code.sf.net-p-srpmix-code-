#!/bin/bash

PATH=/bin:/usr/bin:/sbin:/usr/sbin
CONF=sop.cf
PKGDATADIR=/usr/share/sop

if [ "x$1" != x ] && [ -r "$1/${CONF}" ]; then
    source "$1/${CONF}"
elif test -f /etc/sop/${CONF}; then
    source /etc/sop/${CONF}
else
    echo "Cannot load ${CONF} file" 1>&2
    exit 1
fi


function count
{
    echo $#
}

function verify_targets
{
    if test $(count "${SOP_MIRROR_METHOD[@]}") = $(count "${SOP_MIRROR_TARGET_HOST[@]}") && 
	test $(count "${SOP_MIRROR_TARGET_HOST[@]}") = $(count "${SOP_MIRROR_TARGET_PATH[@]}") &&
	test $(count "${SOP_MIRROR_TARGET_HOST[@]}") = $(count "${SOP_MIRROR_TARGET_PATTERN[@]}"); then
	return 0
    else
	return 1
    fi
}

function mirror
{
    local method=$1
    local host=$2
    local path=$3
    local pattern=$4

    local handler="${PKGDATADIR}/mirror-${method}"
    local odir="${SOP_MIRROR_DIR}/${host}"
    local ldir="${SOP_MIRROR_DIR}/log"
    local date=$(date --rfc-3339=date)


    if ! test -x "${handler}"; then
	echo "No mirror handler for method: $method in $PKGDATADIR" 1>&2
	return 1
    fi

    if ! test -d $odir; then
	mkdir -p $odir
    fi

    if ! test -d $ldir; then
	mkdir -p $ldir
    fi

    (
	cd ${odir}

	local log=${ldir}/${host}.${date}.log

	"${handler}" "${host}" "${path}" "${pattern}" "${log}"
    )
}

function main
{
    local n

    if test "x$SOP_ENABLE_MIRROR" = x; then
	return 0
    fi

    if ! verify_targets; then
	echo "The number of elements of SOP_MIRROR_TARGET_ arrays are not matched" 1>&2
	exit 1;
    fi
    
    let n=$(count "${SOP_MIRROR_TARGET_HOST[@]}")
    let i=0
    while [ $i -lt $n ]; do
	mirror "${SOP_MIRROR_METHOD[$i]}"		\
	       "${SOP_MIRROR_TARGET_HOST[$i]}"		\
	       "${SOP_MIRROR_TARGET_PATH[$i]}"		\
	       "${SOP_MIRROR_TARGET_PATTERN[$i]}" 
	let i=i+1
    done

    return 0
}

time main
