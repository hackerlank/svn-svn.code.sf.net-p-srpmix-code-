#!/bin/bash

PATH=/bin:/usr/bin:/sbin:/usr/sbin
SOPCONFDIR=/etc/sop
CONF=sop.cf
PKGDATADIR=/usr/share/sop

if [ "x$1" != x ] && [ -r "$1/${CONF}" ]; then
    SOPCONFDIR=$1
    source "$1/${CONF}"
elif test -f ${SOPCONFDIR}/${CONF}; then
    source ${SOPCONFDIR}/${CONF}
else
    echo "Cannot load ${CONF} file" 1>&2
    exit 1
fi

function mirror
{
    local cf=$1
    local name=$(basename $1)

    source $cf
    if test -z "$METHOD"; then
	echo "No METHOD found in $cf" 1>&2
	return 1
    fi
    if test -z "$ENABLE"; then
	echo "No ENABLE found in $cf" 1>&2
	return 1
    fi
    if test -z "$GC"; then
	echo "No GC found in $cf" 1>&2
	return 1
    fi
    if test -z "$BACKUP"; then
	echo "No BACKUP found in $cf" 1>&2
	return 1
    fi
    

    if test $ENABLE != yes; then
	return 0
    fi


    local handler="${PKGDATADIR}/mirror-${METHOD}"
    local odir="${SOP_MIRROR_DIR}/${name}"
    local ldir="${SOP_MIRROR_DIR}/log"
    local date=$(date --rfc-3339=date)


    if ! test -x "${handler}"; then
	echo "No mirror handler for method: $method in $PKGDATADIR" 1>&2
	return 1
    fi

    if ! test -d $odir; then
	mkdir -p $odir
    fi

    if ! test -d $ldir; then
	mkdir -p $ldir
    fi


    cd ${odir}

    local log=${ldir}/${host}.${date}.log

    "${handler}" ${cf} "${log}"
}

function main
{
    if test "x$SOP_ENABLE_MIRROR" = x; then
	return 0
    fi


    for x in ${SOPCONFDIR}/mirror.d/*; do
	( mirror $x )
    done
}

time main
