#!/bin/bash

PATH=/bin:/usr/bin:/sbin:/usr/sbin
CONF=sop.cf

if [ "x$1" != x ] && [ -r "$1/${CONF}" ]; then
    source "$1/${CONF}"
elif test -f /etc/sop/${CONF}; then
    source /etc/sop/${CONF}
else
    echo "Cannot load ${CONF} file" 1>&2
    exit 1
fi


function count
{
    echo $#
}

function verify_targets
{
    if test $(count "${MIRROR_TARGET_HOST[@]}") = $(count "${MIRROR_TARGET_PATH[@]}") &&
	test $(count "${MIRROR_TARGET_HOST[@]}") = $(count "${MIRROR_TARGET_PATTERN[@]}"); then
	return 0
    else
	return 1
    fi
}

function mirror
{
    local host=$1
    local path=$2
    local pattern=$3

    local odir="${MIRROR_DIR}/${host}"
    local ldir="${MIRROR_DIR}/log"
    local date=$(date --rfc-3339=date)

    if ! test -d $odir; then
	mkdir -p $odir
    fi

    if ! test -d $ldir; then
	mkdir -p $ldir
    fi

    (
	cd ${odir}
	wget -nH --cut-dirs=2 --mirror ftp://${host}${path} -A "${pattern}" \
            -o ${ldir}/${host}.${date}.log
	)
}

function main
{
    local n

    if test "x$ENABLE_MIRROR" = x; then
	return 0
    fi

    if ! verify_targets; then
	echo "The number of elements of MIRROR_TARGET_ arrays are not matched" 2>&1
	exit 1;
    fi
    
    let n=$(count "${MIRROR_TARGET_HOST[@]}")
    let i=0
    while [ $i -lt $n ]; do
	mirror "${MIRROR_TARGET_HOST[$i]}" "${MIRROR_TARGET_PATH[$i]}" "${MIRROR_TARGET_PATTERN[$i]}" 
	let i=i+1
    done

    return 0
}

time main
