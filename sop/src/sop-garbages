#!/bin/bash

SOPCONFDIR=/etc/sop
CONF=sop.cf
OUTPUT_DIR=

function print_usage
{
    echo "Usage: "
    echo "	$0 [--help|-h] [--output-dir=DIR]"
}

if test -f ${SOPCONFDIR}/${CONF}; then
    source ${SOPCONFDIR}/${CONF}
else
    echo "Cannot load ${CONF} file" 1>&2
    exit 1
fi

source libsrpmix.sh || { 
    echo "Cannot load libsrpmix.sh file" 1>&2 
    exit 1
}


function print_section
{
    echo "##"
    echo '##' " @ " $1 ":"
    echo "##"    
}

function print_entry
{
    echo '#' $1
}

function report
{
    local broken_srpms=$1
    local fs=$2
    local swrfs=$3
    local mirror=$4
    
    local swrf_files=""
    local rpm
    local rpm_qa
    local rpm_e

    #
    # SRPM LEEVL GARBAGES
    # ---------------------
    # Broken src.rpm in mirrros. rm command is enough 
    # to remove the garbages of this class.
    #
    print_section "SRPM LEVEL GARBAGES"
    cat $broken_srpms | while read; do
	print_entry $REPLY
	echo ": srpm-level && [ -e ${REPLY} ] && rm -f ${REPLY}"
    done
    
    #
    # FILE SYSTEM LEVEL GARBAGES
    # --------------------------
    # A file with no associated swrf package file.
    # File system level garbages can be removed with rm command.
    # 
    print_section "File system level garbages"
    diff -ruN $swrfs $fs | grep ^+[0-9a-zA-Z] | while read; do
	local candidate="${REPLY:1}"
	local c
	local swrfs_alive=no
	for c in ${SRPMIX_SWRFS_DIR}/${candidate:0:1}/${candidate}-*.swrf; do
	    if [ -f $c ]; then
		swrfs_alive=yes
		swrf_files="$swrf_files $candidate"
	    fi
	done
	if [ $swrfs_alive = no ]; then
	    local v 
	    local e
	    
	    print_entry "$candidate"
	    for v in "-srpmix" "-srpmix-archives" "-srpmix-plugins"; do
		e="${SRPMIX_DB_DIR}/${candidate:0:1}/${candidate}${v}"
		if [ -e ${e} ]; then
		    echo ": filesystem-level && [ -e ${e} ] && rm -rf ${e}"
		fi
	    done
	    (
		local c
		local e

		cd "${SOP_SOURCES_DIR}/${candidate:0:1}/"
		for c in */*; do
		    e="${SOP_SOURCES_DIR}/${candidate:0:1}/${c}"
		    if [ "${c/\//-}" = "${candidate}" ] && [ -e "${e}" ]; then
			echo ": filesystem-level && [ -e ${e} ] && rm -rf ${e}"
		    fi
		done
	    )
	fi
    done
    
    #
    # SWRF LEVEL GARBAGES
    # -------------------
    # A swrf package file installed as part of rpm package.  However,
    # a swrf file enumerated in this level has no associated
    # associated rpm package in (system global) rpmdb.
    #
    # Manual handling may be needed to remove this level garbages.
    # Handle dependency carefully when removing this level garbages.
    # Some rpm packages generated by srpmix plugins depend on the rpm
    # package.
    #
    # I have never got this kind of garbages. So I have not written
    # code which generates scriptlets for removing the garbages yet.
    #
    print_section "Swrf file level garbages"
    for c in $swrf_files; do
	print_entry $c
    done

    
    #
    # RPM LEVEL GARBAGES
    # ------------------
    # If a srpmix'ed rpm is installed on the system, a src.rpm (the
    # data source for the srpmix'ed rpm) must be at the mirror
    # directory. If the src.rpm is not there, it is obsoleted. The
    # associated srpmix'ed rpm also should be removed. sop-update
    # may handle this task. Why there are this level garbages?
    # Mayby bug in sop-update. RPM command can be used to remove the
    # garbages. As noted in SWRF LEVEL GARBAGES, the dependency must
    # be considered when removing.
    #
    print_section "RPM level garbages"
    diff -ruN $mirror $swrfs | grep ^+[0-9a-zA-Z] | while read; do
	rpm="${REPLY:1}"
	print_entry $rpm

	rpm_e=$(echo "$rpm_qa" | tr ' ' '\n' | grep "$rpm"'-plugin-.*')
	for e in $rpm_e; do 
	    echo ": rpm-level && rpm -i $e 2>&1 > /dev/null && rpm -e $e"
	done

	rpm_e=$(echo "$rpm_qa" | tr ' ' '\n' | grep "$rpm"'-plugins-.*')
	for e in $rpm_e; do 
	    echo ": rpm-level && rpm -i $e 2>&1 > /dev/null && rpm -e $e"
	done

	rpm_e=$(echo "$rpm_qa" | tr ' ' '\n' | grep "$rpm"'-archives-.*')
	for e in $rpm_e; do 
	    echo ": rpm-level && rpm -i $e 2>&1 > /dev/null && rpm -e $e"
	done

	e=$rpm
	echo ": rpm-level && rpm -i $e 2>&1 > /dev/null && rpm -e $e"
    done
}

function parse_arguments
{
    while [ $# -gt 0 ]; do
	case "$1" in
	    --help|-h)
		print_usage
		exit 0
		;;
	    (--output-dir=*)
	    	OUTPUT_DIR=${1/--output-dir=}
		if [ -d "${OUTPUT_DIR}" ]; then
		    OUTPUT_DIR=$(cd $OUTPUT_DIR; pwd)
		else
		    echo "No such directory: ${OUTPUT_DIR}" 1>&2
		    exit 1
		fi
		;;
	esac
	shift
    done
}

function main
{
    local tempdir
    local rpm_qa


    parse_arguments "$@"
    tempdir=`mktemp -d`
    if [ $? != 0 ]; then
	exit 1
    fi
    trap "chmod -R u+w $tempdir; /bin/rm -rf $tempdir" 0    

    
    local list_in_fs=/$tempdir/fs
    touch $list_in_fs

    for x in ${SOP_SOURCES_DIR}/[0-9a-zA-Z]/*/*/pre-build; do
	if ! [[ "$x" =~ .*\^.* ]]; then
	    echo $x | \
		sed -e "s#${SOP_SOURCES_DIR}/[0-9a-zA-Z]/##" | \
		sed -e "s#/pre-build##" | \
		sed -e "s#/#-#" 
	fi
    done | LANG=C sort | uniq > $list_in_fs


    local list_swrf=/$tempdir/swrf
    touch $list_swrf

    rpm_qa=$(rpm -qa)
    for x in $(echo "$rpm_qa" | tr ' ' '\n' | grep -e -srpmix | grep -v -e srpmix-dir-pkg-srpmix | grep -v -e srpmix-plugin  | grep -v -e srpmix-archives | grep -v -e -lcopy-); do
	echo $x | sed -e 's/-srpmix.*$//'
    done | LANG=C sort | uniq > $list_swrf


    local broken_srpms=/$tempdir/broken_srpms
    local list_in_mirrors=/$tempdir/mirrors
    touch $broken_srpms
    touch $list_in_mirrors
    for d in ${SOP_CRADLES_DIR}/*/mirror; do
	for s in $(find $d -type f | grep 'src.rpm$'); do
	    if ! rpm -qp --nosignature --queryformat "%{NAME}-%{VERSION}-%{RELEASE}\n" $s 2> /dev/null; then
		echo $s >> $broken_srpms
	    fi
	done
    done | LANG=C sort | uniq > $list_in_mirrors


    local output
    if [ -n "$OUTPUT_DIR" ]; then
	local date=$(date --rfc-3339=date)
	output="${OUTPUT_DIR}/sop-gc-${date}"
    else
	output=/dev/stdout
    fi
    report "$broken_srpms" "$list_in_fs" "$list_swrf" "$list_in_mirrors" > $output
}

time main "$@"
